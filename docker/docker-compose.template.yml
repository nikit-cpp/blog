version: '3.1'

services:
  blog:
    image: nkonev/blog:1.0.1-SNAPSHOT
    logging:
      driver: "json-file"
#      options:
#        tag: blog
    deploy:
      replicas: 2
    environment:
      # https://stackoverflow.com/questions/28327620/difference-between-java-options-java-tool-options-and-java-opts
      # https://blogs.oracle.com/poonam/about-g1-garbage-collector%2c-permanent-generation-and-metaspace
      - _JAVA_OPTIONS=-Djava.security.egd=file:/dev/./urandom -Xms256m -Xmx512m -XX:MetaspaceSize=128M -XX:MaxMetaspaceSize=256M -XX:OnOutOfMemoryError="kill -9 %p"
      - liquibase.contexts=main,test
      # todo set keystore and enable security.require-ssl=true
      - server.port=8443
      - custom.stomp.broker.host=rabbitmq
      - custom.stomp.broker.port=61613
      - spring.datasource.url=jdbc:postgresql://postgresql:5432/blog?connectTimeout=10&socketTimeout=40
      - spring.redis.url=redis://redis:6379/0
      - spring.resources.static-locations=file:/opt/blog/www/, classpath:/static/
      - custom.prerender.enable=true
      - custom.prerender.prerenderServiceUrl=http://prerender:3000/
      - custom.prerender.crawlerUserAgents=googlebot,prometheus
      - custom.prerender.forwardedURLHeader=X-FORWARDED-URL # only for tests
#      - logging.level.com.github.greengerong.PrerenderSeoService=TRACE
      - spring.mail.host=smtp.yandex.ru
      - custom.email.from=username@yandex.ru
      - spring.mail.username=username
      - spring.mail.password=password
      - custom.base-url=http://your-host.com

    volumes :
      - ./www:/opt/blog/www
    ports:
      - 8443:8443
      - 3020:3010
  visualizer:
    image: dockersamples/visualizer:stable
    ports:
      - 8092:8080
    stop_grace_period: 1m30s
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    logging:
      driver: "json-file"
#      options:
#        tag: visualizer
    deploy:
      placement:
        constraints: [node.role == manager]
  postgresql:
    image: postgres:10.1
    hostname: postgresql
    environment:
      - POSTGRES_PASSWORD=postgresqlPassword
    volumes :
      - ./postgresql_prod/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
      - postgresql_prod_data_dir:/var/lib/postgresql/data
    logging:
      driver: "json-file"
#      options:
#        tag: postgresql
    deploy:
      placement:
        constraints: [node.labels.blog.server.role == db]

  redis:
    image: redis:4.0.6
    hostname: redis
    volumes :
      - redis_prod_data_dir:/data
    logging:
      driver: "json-file"
#      options:
#        tag: redis
    deploy:
      placement:
        constraints: [node.labels.blog.server.role == db]

  rabbitmq:
    image: nkonev/rabbitmq-web-stomp:3.7.0
    hostname: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=blog
      - RABBITMQ_DEFAULT_PASS=blogPazZw0rd
      - RABBITMQ_NODENAME=my-rabbit
    volumes :
      - rabbitmq_prod_data_dir:/var/lib/rabbitmq/mnesia
    logging:
      driver: "json-file"
#      options:
#        tag: rabbitmq
    deploy:
      placement:
        constraints: [node.labels.blog.server.role == db]

  prerender:
    image: nkonev/prerender-redis
    hostname: prerender
    volumes:
      - redis_prerender_prod_data_dir:/var/lib/redis
    logging:
      driver: "json-file"
#      options:
#        tag: prerender
    deploy:
      placement:
        constraints: [node.labels.blog.server.role == db]

  rabbitmq_exporter:
    image: kbudde/rabbitmq-exporter
    hostname: rabbitmq_exporter
    ports:
      - 9191:9191
    environment:
      - RABBIT_URL=http://rabbitmq:15672
      - RABBIT_USER=blog
      - RABBIT_PASSWORD=blogPazZw0rd
      - PUBLISH_PORT=9191
    logging:
      driver: "json-file"
#      options:
#        tag: rabbitmq_exporter

  postgresql_exporter:
    image: wrouesnel/postgres_exporter
    hostname: postgresql_exporter
    ports:
      - 9187:9187
    volumes:
      - ./postgresql_exporter/queries.yaml:/queries.yaml
    environment:
      - DATA_SOURCE_NAME=postgresql://postgres:postgresqlPassword@postgresql:5432/blog?sslmode=disable
    command: ["--extend.query-path", "/queries.yaml"]
    logging:
      driver: "json-file"
#      options:
#        tag: postgresql_exporter

  redis_exporter:
    image: oliver006/redis_exporter
    hostname: redis_exporter
    ports:
      - 9121:9121
    environment:
      - REDIS_ADDR=redis://redis:6379
    logging:
      driver: "json-file"
#      options:
#        tag: redis_exporter

  node_exporter:
    image: prom/node-exporter
    hostname: 'node_exporter'
    ports:
      - '9100:9100'
    logging:
      driver: "json-file"
#      options:
#        tag: node_exporter
    command: ["--log.level", "fatal", "--log.format", "logger:stdout"]

  blackbox_exporter:
    image: prom/blackbox-exporter
    hostname: 'blackbox_exporter'
    ports:
      - '9115:9115'
    volumes:
      - ./blackbox_exporter/blackbox.yml:/config/blackbox.yml
    command: ['--config.file=/config/blackbox.yml']
    logging:
      driver: "json-file"
#      options:
#        tag: blackbox_exporter

  prometheus:
    image: prom/prometheus
    hostname: prometheus
    ports:
      - 9090:9090
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/alerting.yml:/etc/prometheus/alerting.yml
      - prometheus_data:/prometheus
    deploy:
      placement:
        constraints: [node.role == manager]
    logging:
      driver: "json-file"
#      options:
#        tag: prometheus

  grafana:
    image: grafana/grafana:3.1.1
    hostname: grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SERVER_ROOT_URL=http://grafana
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - PROMETHEUS_URL=http://prometheus:9090
    ports:
      - "3000:3000"
    volumes:
      - grafana_data_prod_data_dir:/var/lib/grafana
      - ./grafana/entrypoint.sh:/custom-entrypoint.sh
    entrypoint: ["/custom-entrypoint.sh"]
    deploy:
      placement:
        constraints: [node.role == manager]
    logging:
      driver: "json-file"
#      options:
#        tag: grafana

  nginx:
     image: nginx:1.13.7
     hostname: nginx
     volumes:
       - ./nginx/etc/nginx/conf.d:/etc/nginx/conf.d
       - ./nginx/etc/nginx/htpasswd:/etc/nginx/htpasswd
       - ./nginx/etc/nginx/nginx.conf:/etc/nginx/nginx.conf
     ports:
       - "8444:443" # blog https
       - "8088:80" # blog http -> https
       - "3001:3001" # grafana
       - "9091:9091" # prometheus
       - "8090:8090" # visualizer
     deploy:
       placement:
         constraints: [node.role == manager]
     logging:
       driver: "json-file"
#      options:
#        tag: nginx

volumes:
  #enviroment
  postgresql_prod_data_dir:
  redis_prod_data_dir:
  rabbitmq_prod_data_dir:
  redis_prerender_prod_data_dir:
  prometheus_data:
  grafana_data_prod_data_dir:
