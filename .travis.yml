language: java
cache:
  directories:
  - "$HOME/.m2"
  - frontend/node
  - frontend/node_modules
jdk: oraclejdk8
# firefox spamming workaround https://github.com/travis-ci/travis-cookbooks/issues/911
before_install:
  - sudo apt-get -qq update
  - sudo apt-get install -y dbus-x11 # https://github.com/travis-ci/travis-cookbooks/issues/911
  - sudo apt-get install -y chromium-browser=61.0.3163.100-0ubuntu0.14.04.1202 #https://www.ubuntuupdates.org/pm/google-chrome-stable
  - sudo openssl aes-256-cbc -K $encrypted_8518ee46cc9c_key -iv $encrypted_8518ee46cc9c_iv -in ssh-travis2.enc -out ~/.ssh/id_rsa -d
  - sudo chmod 600 ~/.ssh/id_rsa
install: "/bin/true" # workaround https://github.com/Swagger2Markup/swagger2markup-maven-plugin/pull/24
# https://docs.travis-ci.com/user/gui-and-headless-browsers/
before_script:
  - "export DISPLAY=:99.0"
  - "sh -e /etc/init.d/xvfb start"
  - sleep 3 # give xvfb some time to start
  - (cd docker; docker-compose up -d)
after_acript:
  - "sh -e /etc/init.d/xvfb stop"
  - (cd docker; docker-compose down)
script:
  # if there isn't pointed explicitly PhantomJS will be used by default for both webdriver integration test and js unit test
  - "./mvnw -P frontend -P docker clean package"
#  - "./mvnw -Dkarma.browsers=Firefox -Dcustom.selenium.browser=FIREFOX -P frontend clean package"
#  - "./mvnw -Dkarma.browsers=Chrome -Dcustom.selenium.browser=CHROME -P frontend clean package"
  - if [[ "$TRAVIS_BRANCH" == "master" && "$TRAVIS_TEST_RESULT" == "0" ]]; then (
      echo "Will push docker image";
      docker login -u="$DOCKER_LOGIN" -p="$DOCKER_PASSWORD";
      docker push nkonev/blog:latest;
      docker push nkonev/blog:$(cat frontend/target/VERSION);

      echo $DEPLOY_PRIVATE_KEY | base64 -d > ~/.ssh/id_rsa;
      chmod 600 ~/.ssh/id_rsa;
      ssh -o "BatchMode yes" $CONNECT_LINE "$UPDATE_COMMAND";
    ) else (
      echo "Won't push docker image because subsequent build failed";
    ) fi
addons:
  firefox: "56.0"
env:
  - secure: "G7uixgR/wXLp5T0H+gicna3wpxEaVsuUEwfJiwJiW3cSPYTwOXsttVeH/GpPMEQblEdWfA2KVRxP9xzhaCcOA4edMBE1n+V47Ngb4RyKg5/uIN1zhWd5QjXLncSilZdTRh3UqIsQFQjei8DUnmykwg/im+WiEljKm5XP4POf1nn0FOdTpgRPkc+vJ/pYhbqm6Z/jnfev9+Nq0j6cMdHfgxeJUmEjaGBBnsqre4HzyOMjtmIV4lXzBne1et0g5ca+lt/wgPCtSUnQsrH6MM4Rc/jVrsbZXnHaCoNfl2+kfPW568rdSfCM87waYit6qPhKGlHLXS3w8MZIAboZI1uTfbsjXxHacGQzhEyJEPl/Z3Mh+/WDlTB3rYxktwluLIf0jhNhRBCV45O9rmvjNvz0Yu33fh4YeJXY2Z8KzU0oO8bwzhYVK6Lw6zhGxHwHSuRPXIZGTVhLd4EVW/p6Hg9gjET8sif/EV529Ri1JF1LJeU1wo3X0d+2yq1/aUMEo3PA18UwDttyde4DsmanHYqBWgLTQX+LY40OqzhLFNl5jqE6oPIB30DeuILz/cLvSMq4ry3f0zj3XABirUaA+LHysCAo6vkRq0zmGYjJjm6OAuhGRLxKvPefB9sofEHsXLXA6k7IJp+zyHzpXrDkoE88s0khYZE63jU3+RrFGepSAqA="
    secure: "rHnXBajSBBU9ApWxsYZeuCBBeeDIjOkPMElgC9bziQQLUFKcXj6pQTLc1j0b3KTB2vdOsSVC4x4ZEQRUizs4AujwQh40+tWq1ZXaLSDTe9fSnl8itwbzyJEglxEAfxwj51/7Rvg5lS7PganCrr69SMD0UUU1vSqZ7yHk80sV5XHT6d2bfJ5JNYdKtz4R/GfjvlGp4KwBDg6l2txnX9F6yPnV2nGtG7/2kE45CvCWwrLHtKu09Hc3Bj2QGITZAcdZve7NL5d5qt1o7Zh+mbNHdtmGd4G95z8fMOBTbLpuPXeBBBgZbUgFxj49mDYKP35CgWYLi3delSRacqHOdZarSatpc0CI/Yn+wXZ10f6Vn6Tjylr2OuQlS11gfriFH6bMrZwBjU1HKxGlvQPNKnf2jH8XQIPxSTWh+lm1p6GoNaFJLd3fqvja7GdI+KZX+gRMgrPPuIxrZxAJeNM54q23EciIkXCie2bbmomGXFVvAo2AaEzO+1gVffyzZMExL1b6MIL0CYGMFTRYbiGId61ArHjOgA1srqka5AMeUDme7aY7kNN6RplvBAIvRq+TE58EA7SDb/qwUgvW+dCgJaW8THP58u9z55S/3cUK0mkMKv7LflOThkbihZWpfRGzMREd+iriCq8408o7CGfDxvTCDpQNSOF55N8l2YQ7ZOAyPKU="