language: java
cache:
  directories:
  - "$HOME/.m2"
  - frontend/node
  - frontend/node_modules
jdk: oraclejdk8
# firefox spamming workaround https://github.com/travis-ci/travis-cookbooks/issues/911
before_install:
  - sudo apt-get -qq update
  - sudo apt-get install -y dbus-x11 # https://github.com/travis-ci/travis-cookbooks/issues/911
  - sudo apt-get install -y chromium-browser=61.0.3163.100-0ubuntu0.14.04.1202 #https://www.ubuntuupdates.org/pm/google-chrome-stable
  - sudo openssl aes-256-cbc -K $encrypted_8518ee46cc9c_key -iv $encrypted_8518ee46cc9c_iv -in ssh-travis2.enc -out ~/.ssh/id_rsa -d
  - sudo chmod 600 ~/.ssh/id_rsa
install: "/bin/true" # workaround https://github.com/Swagger2Markup/swagger2markup-maven-plugin/pull/24
# https://docs.travis-ci.com/user/gui-and-headless-browsers/
before_script:
  - "export DISPLAY=:99.0"
  - "sh -e /etc/init.d/xvfb start"
  - sleep 3 # give xvfb some time to start
  - (cd docker; docker-compose up -d)
after_acript:
  - "sh -e /etc/init.d/xvfb stop"
  - (cd docker; docker-compose down)
script:
  # if there isn't pointed explicitly PhantomJS will be used by default for both webdriver integration test and js unit test
  - "./mvnw -P frontend -P docker clean package"
#  - "./mvnw -Dkarma.browsers=Firefox -Dcustom.selenium.browser=FIREFOX -P frontend clean package"
#  - "./mvnw -Dkarma.browsers=Chrome -Dcustom.selenium.browser=CHROME -P frontend clean package"
  - if [[ "$TRAVIS_BRANCH" == "master" && "$TRAVIS_TEST_RESULT" == "0" ]]; then (
      echo "Will push docker image";
      docker login -u="$DOCKER_LOGIN" -p="$DOCKER_PASSWORD";
      docker push nkonev/blog:latest;
      docker push nkonev/blog:$(cat frontend/target/VERSION);

      echo $DEPLOY_PRIVATE_KEY | base64 -d > ~/.ssh/id_rsa;
      chmod 600 ~/.ssh/id_rsa;
      ssh -o "BatchMode yes" $CONNECT_LINE "$UPDATE_COMMAND";
    ) else (
      echo "Won't push docker image because subsequent build failed";
    ) fi
addons:
  firefox: "56.0"
env:
  secure: "V4B85BlyTHfdt1iaVC0padi1qU2w6VZX7IqD/+5u7+LPsdplmAO/quL+gwH8KVVdV2LHOQhk/lPq9PLHtfNQTI1wbWu0kYiquABoUMszDlXnoQhVLb4G77gaCcgbDuKyXFJT6GrdPXzdrvPujUZFl4fD00sGxMU21vxC/DwfEgJtIbGn/BCAj++lwf7CYR7J8re/8aKGzqbcnEt8tsaHPnhJ03hpdkoYRGaj1lhUfXKZZkD9zGQ5yWkKmxsIbKLAmxzYg46tl3QwkK+8hPyHGj6oLHjVFB2kHMatgpOzUv0hQGStSfnal1kU8ETkuVIDFrbE5Mr3J9rn87QPDoehUbd+mZ9rMifVln6vU9ALZ+LuwQw404Va89nweEIJt0Ep4yKyaNiD+pw2D4q8vHMskuvho7/5rY/C9wq1hslgUN7ketEOPTKCJkFl9Srt6EN0F0ItEc+mJttb23a6U6L/bV9S+XeYo52Waj3jdoekyrO2mN2zEd6QfgjnrcKczBlahxHtS+qr1Ad0u50B44a+YccdlGcP+dZ5SRdpQPsCqojMy4mQgEo2afKQG/SdjNsiEosVOjbCGDqsOm1x3r22A2o4NxsVnkQxP/FuQHn0S6o6q5adhaZiBD/aQpFUfgBrv5SQfJBqlM3W6/KNQOWP7f/h7CVX2bzx98OKI3UM+Tw="