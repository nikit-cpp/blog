<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <artifactId>chat</artifactId>

    <parent>
        <artifactId>blog.parent</artifactId>
        <groupId>com.github.nkonev</groupId>
        <version>1.0.3-SNAPSHOT</version>
    </parent>

    <properties>
        <skipTests>false</skipTests>
        <maven-resources-plugin.version>3.0.2</maven-resources-plugin.version>
        <git-template-json>git.template.json</git-template-json>
        <git-json>git.json</git-json>

        <docker.repository>nkonev/chat</docker.repository>
    </properties>

    <pluginRepositories>
        <pluginRepository>
            <id>jcenter-releases</id>
            <name>jcenter</name>
            <url>http://jcenter.bintray.com</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>

    <repositories>
        <repository>
            <id>jcentral</id>
            <name>bintray</name>
            <url>http://jcenter.bintray.com</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>

    <build>
        <resources>
            <!-- copy properties such as liquibase.yml -->
            <resource>
                <directory>${basedir}/src/main/resources</directory>
            </resource>

            <!-- placeholders will be replaced with git-commit-id plugin -->
            <resource>
                <directory>${basedir}/src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/${git-template-json}</include>
                </includes>
            </resource>
        </resources>

        <pluginManagement>
            <plugins>
            </plugins>
        </pluginManagement>


        <plugins>
            <plugin>
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
                <version>${git.commit.id.plugin.version}</version>
                <executions>
                    <execution>
                        <id>get-the-git-infos</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>revision</goal>
                        </goals>
                        <configuration>
                            <failOnNoGitDirectory>false</failOnNoGitDirectory>
                            <failOnUnableToExtractRepoInfo>false</failOnUnableToExtractRepoInfo>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring.boot.version}</version>
                <configuration>
                    <skip>false</skip>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                        <configuration>
                            <mainClass>com.github.nkonev.Launcher</mainClass>
                            <!-- Need because repackaged jar with original name not applicable for including -->
                            <!-- Also *-exec.jar used in Dockerfile -->
                            <classifier>exec</classifier>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>version-stuff</id>
                        <phase>compile</phase>
                        <configuration>
                            <tasks>
                                <!-- this is just static file which'll be served by tomcat -->
                                <move file="${project.build.outputDirectory}/static/${git-template-json}" tofile="${project.build.outputDirectory}/static/${git-json}"/>
                                <!-- this file used by travis (see .travis.yml) for pick-up version and use it in docker push -->
                                <echo file="${project.build.directory}/VERSION">${project.version}</echo>
                            </tasks>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-webflux</artifactId>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.github.nkonev</groupId>
            <artifactId>common-test</artifactId>
            <version>1.0.3-SNAPSHOT</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.github.nkonev</groupId>
            <artifactId>api</artifactId>
            <version>1.0.3-SNAPSHOT</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-websocket</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-mongodb-reactive</artifactId>
        </dependency>

        <dependency>
            <groupId>io.projectreactor</groupId>
            <artifactId>reactor-core</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-messaging</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-mongodb</artifactId>
        </dependency>

        <dependency>
            <groupId>com.github.mongobee</groupId>
            <artifactId>mongobee</artifactId>
            <version>0.13</version>
        </dependency>

        <dependency>
            <groupId>org.mongodb</groupId>
            <artifactId>mongodb-driver-reactivestreams</artifactId>
        </dependency>

        <dependency>
            <groupId>io.projectreactor</groupId>
            <artifactId>reactor-test</artifactId>
            <scope>test</scope>
        </dependency>


    </dependencies>


    <profiles>
		<profile>
            <id>local</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
			<build>
				<plugins>
				  <plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven.surefire.plugin.version}</version>
					<configuration>
					  <systemProperties>
						<property>
						  <name>spring.profiles.active</name>
						  <value>local</value>
						</property>
					  </systemProperties>
					</configuration>
				  </plugin>
				</plugins>
			</build>
        </profile>

        <profile>
            <id>docker</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>docker-build</id>
                                <phase>package</phase>
                                <configuration>
                                    <tasks>
                                        <!-- "current-test" tag is not for publish, only for test current build -->
                                        <exec dir="${project.basedir}" executable="docker" failonerror="true" searchpath="true">
                                            <arg line="build -t ${docker.repository}:current-test -t ${docker.repository}:latest -t ${docker.repository}:${project.version} ."/>
                                        </exec>
                                    </tasks>
                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>jacoco</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <configuration>
                            <skip>false</skip>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>


</project>
